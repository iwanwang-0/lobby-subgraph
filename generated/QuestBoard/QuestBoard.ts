// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ApprovedManager extends ethereum.Event {
  get params(): ApprovedManager__Params {
    return new ApprovedManager__Params(this);
  }
}

export class ApprovedManager__Params {
  _event: ApprovedManager;

  constructor(event: ApprovedManager) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ChestUpdated extends ethereum.Event {
  get params(): ChestUpdated__Params {
    return new ChestUpdated__Params(this);
  }
}

export class ChestUpdated__Params {
  _event: ChestUpdated;

  constructor(event: ChestUpdated) {
    this._event = event;
  }

  get oldChest(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newChest(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DistributorUpdated extends ethereum.Event {
  get params(): DistributorUpdated__Params {
    return new DistributorUpdated__Params(this);
  }
}

export class DistributorUpdated__Params {
  _event: DistributorUpdated;

  constructor(event: DistributorUpdated) {
    this._event = event;
  }

  get oldDistributor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newDistributor(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class EmergencyWithdraw extends ethereum.Event {
  get params(): EmergencyWithdraw__Params {
    return new EmergencyWithdraw__Params(this);
  }
}

export class EmergencyWithdraw__Params {
  _event: EmergencyWithdraw;

  constructor(event: EmergencyWithdraw) {
    this._event = event;
  }

  get questID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class IncreasedQuestDuration extends ethereum.Event {
  get params(): IncreasedQuestDuration__Params {
    return new IncreasedQuestDuration__Params(this);
  }
}

export class IncreasedQuestDuration__Params {
  _event: IncreasedQuestDuration;

  constructor(event: IncreasedQuestDuration) {
    this._event = event;
  }

  get questID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get addedDuration(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get addedRewardAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class IncreasedQuestObjective extends ethereum.Event {
  get params(): IncreasedQuestObjective__Params {
    return new IncreasedQuestObjective__Params(this);
  }
}

export class IncreasedQuestObjective__Params {
  _event: IncreasedQuestObjective;

  constructor(event: IncreasedQuestObjective) {
    this._event = event;
  }

  get questID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get updatePeriod(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newObjective(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get addedRewardAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class IncreasedQuestReward extends ethereum.Event {
  get params(): IncreasedQuestReward__Params {
    return new IncreasedQuestReward__Params(this);
  }
}

export class IncreasedQuestReward__Params {
  _event: IncreasedQuestReward;

  constructor(event: IncreasedQuestReward) {
    this._event = event;
  }

  get questID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get updatePeriod(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newRewardPerVote(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get addedRewardAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class InitDistributor extends ethereum.Event {
  get params(): InitDistributor__Params {
    return new InitDistributor__Params(this);
  }
}

export class InitDistributor__Params {
  _event: InitDistributor;

  constructor(event: InitDistributor) {
    this._event = event;
  }

  get distributor(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Killed extends ethereum.Event {
  get params(): Killed__Params {
    return new Killed__Params(this);
  }
}

export class Killed__Params {
  _event: Killed;

  constructor(event: Killed) {
    this._event = event;
  }

  get killTime(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MinObjectiveUpdated extends ethereum.Event {
  get params(): MinObjectiveUpdated__Params {
    return new MinObjectiveUpdated__Params(this);
  }
}

export class MinObjectiveUpdated__Params {
  _event: MinObjectiveUpdated;

  constructor(event: MinObjectiveUpdated) {
    this._event = event;
  }

  get oldMinObjective(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newMinObjective(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class NewPendingOwner extends ethereum.Event {
  get params(): NewPendingOwner__Params {
    return new NewPendingOwner__Params(this);
  }
}

export class NewPendingOwner__Params {
  _event: NewPendingOwner;

  constructor(event: NewPendingOwner) {
    this._event = event;
  }

  get previousPendingOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newPendingOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewQuest extends ethereum.Event {
  get params(): NewQuest__Params {
    return new NewQuest__Params(this);
  }
}

export class NewQuest__Params {
  _event: NewQuest;

  constructor(event: NewQuest) {
    this._event = event;
  }

  get questID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get gauge(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get rewardToken(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get duration(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get startPeriod(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get objectiveVotes(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get rewardPerVote(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PeriodClosed extends ethereum.Event {
  get params(): PeriodClosed__Params {
    return new PeriodClosed__Params(this);
  }
}

export class PeriodClosed__Params {
  _event: PeriodClosed;

  constructor(event: PeriodClosed) {
    this._event = event;
  }

  get questID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get period(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PlatformFeeUpdated extends ethereum.Event {
  get params(): PlatformFeeUpdated__Params {
    return new PlatformFeeUpdated__Params(this);
  }
}

export class PlatformFeeUpdated__Params {
  _event: PlatformFeeUpdated;

  constructor(event: PlatformFeeUpdated) {
    this._event = event;
  }

  get oldfee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RemovedManager extends ethereum.Event {
  get params(): RemovedManager__Params {
    return new RemovedManager__Params(this);
  }
}

export class RemovedManager__Params {
  _event: RemovedManager;

  constructor(event: RemovedManager) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unkilled extends ethereum.Event {
  get params(): Unkilled__Params {
    return new Unkilled__Params(this);
  }
}

export class Unkilled__Params {
  _event: Unkilled;

  constructor(event: Unkilled) {
    this._event = event;
  }

  get unkillTime(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class UpdateRewardToken extends ethereum.Event {
  get params(): UpdateRewardToken__Params {
    return new UpdateRewardToken__Params(this);
  }
}

export class UpdateRewardToken__Params {
  _event: UpdateRewardToken;

  constructor(event: UpdateRewardToken) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newMinRewardPerVote(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class WhitelistToken extends ethereum.Event {
  get params(): WhitelistToken__Params {
    return new WhitelistToken__Params(this);
  }
}

export class WhitelistToken__Params {
  _event: WhitelistToken;

  constructor(event: WhitelistToken) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get minRewardPerVote(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class WithdrawUnusedRewards extends ethereum.Event {
  get params(): WithdrawUnusedRewards__Params {
    return new WithdrawUnusedRewards__Params(this);
  }
}

export class WithdrawUnusedRewards__Params {
  _event: WithdrawUnusedRewards;

  constructor(event: WithdrawUnusedRewards) {
    this._event = event;
  }

  get questID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class QuestBoard__closePartOfQuestPeriodResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getClosed(): BigInt {
    return this.value0;
  }

  getSkipped(): BigInt {
    return this.value1;
  }
}

export class QuestBoard__closeQuestPeriodResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getClosed(): BigInt {
    return this.value0;
  }

  getSkipped(): BigInt {
    return this.value1;
  }
}

export class QuestBoard__getAllQuestPeriodsForQuestIdResultValue0Struct extends ethereum.Tuple {
  get rewardAmountPerPeriod(): BigInt {
    return this[0].toBigInt();
  }

  get rewardPerVote(): BigInt {
    return this[1].toBigInt();
  }

  get objectiveVotes(): BigInt {
    return this[2].toBigInt();
  }

  get rewardAmountDistributed(): BigInt {
    return this[3].toBigInt();
  }

  get withdrawableAmount(): BigInt {
    return this[4].toBigInt();
  }

  get periodStart(): BigInt {
    return this[5].toBigInt();
  }

  get currentState(): i32 {
    return this[6].toI32();
  }
}

export class QuestBoard__periodsByQuestResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: i32;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set(
      "value6",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value6))
    );
    return map;
  }

  getRewardAmountPerPeriod(): BigInt {
    return this.value0;
  }

  getRewardPerVote(): BigInt {
    return this.value1;
  }

  getObjectiveVotes(): BigInt {
    return this.value2;
  }

  getRewardAmountDistributed(): BigInt {
    return this.value3;
  }

  getWithdrawableAmount(): BigInt {
    return this.value4;
  }

  getPeriodStart(): BigInt {
    return this.value5;
  }

  getCurrentState(): i32 {
    return this.value6;
  }
}

export class QuestBoard__questsResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getCreator(): Address {
    return this.value0;
  }

  getRewardToken(): Address {
    return this.value1;
  }

  getGauge(): Address {
    return this.value2;
  }

  getDuration(): BigInt {
    return this.value3;
  }

  getPeriodStart(): BigInt {
    return this.value4;
  }

  getTotalRewardAmount(): BigInt {
    return this.value5;
  }
}

export class QuestBoard extends ethereum.SmartContract {
  static bind(address: Address): QuestBoard {
    return new QuestBoard("QuestBoard", address);
  }

  GAUGE_CONTROLLER(): Address {
    let result = super.call(
      "GAUGE_CONTROLLER",
      "GAUGE_CONTROLLER():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_GAUGE_CONTROLLER(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "GAUGE_CONTROLLER",
      "GAUGE_CONTROLLER():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  KILL_DELAY(): BigInt {
    let result = super.call("KILL_DELAY", "KILL_DELAY():(uint256)", []);

    return result[0].toBigInt();
  }

  try_KILL_DELAY(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("KILL_DELAY", "KILL_DELAY():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  closePartOfQuestPeriod(
    period: BigInt,
    questIDs: Array<BigInt>
  ): QuestBoard__closePartOfQuestPeriodResult {
    let result = super.call(
      "closePartOfQuestPeriod",
      "closePartOfQuestPeriod(uint256,uint256[]):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(period),
        ethereum.Value.fromUnsignedBigIntArray(questIDs)
      ]
    );

    return new QuestBoard__closePartOfQuestPeriodResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_closePartOfQuestPeriod(
    period: BigInt,
    questIDs: Array<BigInt>
  ): ethereum.CallResult<QuestBoard__closePartOfQuestPeriodResult> {
    let result = super.tryCall(
      "closePartOfQuestPeriod",
      "closePartOfQuestPeriod(uint256,uint256[]):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(period),
        ethereum.Value.fromUnsignedBigIntArray(questIDs)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new QuestBoard__closePartOfQuestPeriodResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  closeQuestPeriod(period: BigInt): QuestBoard__closeQuestPeriodResult {
    let result = super.call(
      "closeQuestPeriod",
      "closeQuestPeriod(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(period)]
    );

    return new QuestBoard__closeQuestPeriodResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_closeQuestPeriod(
    period: BigInt
  ): ethereum.CallResult<QuestBoard__closeQuestPeriodResult> {
    let result = super.tryCall(
      "closeQuestPeriod",
      "closeQuestPeriod(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(period)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new QuestBoard__closeQuestPeriodResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  createQuest(
    gauge: Address,
    rewardToken: Address,
    duration: BigInt,
    objective: BigInt,
    rewardPerVote: BigInt,
    totalRewardAmount: BigInt,
    feeAmount: BigInt
  ): BigInt {
    let result = super.call(
      "createQuest",
      "createQuest(address,address,uint48,uint256,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(gauge),
        ethereum.Value.fromAddress(rewardToken),
        ethereum.Value.fromUnsignedBigInt(duration),
        ethereum.Value.fromUnsignedBigInt(objective),
        ethereum.Value.fromUnsignedBigInt(rewardPerVote),
        ethereum.Value.fromUnsignedBigInt(totalRewardAmount),
        ethereum.Value.fromUnsignedBigInt(feeAmount)
      ]
    );

    return result[0].toBigInt();
  }

  try_createQuest(
    gauge: Address,
    rewardToken: Address,
    duration: BigInt,
    objective: BigInt,
    rewardPerVote: BigInt,
    totalRewardAmount: BigInt,
    feeAmount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createQuest",
      "createQuest(address,address,uint48,uint256,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(gauge),
        ethereum.Value.fromAddress(rewardToken),
        ethereum.Value.fromUnsignedBigInt(duration),
        ethereum.Value.fromUnsignedBigInt(objective),
        ethereum.Value.fromUnsignedBigInt(rewardPerVote),
        ethereum.Value.fromUnsignedBigInt(totalRewardAmount),
        ethereum.Value.fromUnsignedBigInt(feeAmount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  distributor(): Address {
    let result = super.call("distributor", "distributor():(address)", []);

    return result[0].toAddress();
  }

  try_distributor(): ethereum.CallResult<Address> {
    let result = super.tryCall("distributor", "distributor():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAllPeriodsForQuestId(questId: BigInt): Array<BigInt> {
    let result = super.call(
      "getAllPeriodsForQuestId",
      "getAllPeriodsForQuestId(uint256):(uint48[])",
      [ethereum.Value.fromUnsignedBigInt(questId)]
    );

    return result[0].toBigIntArray();
  }

  try_getAllPeriodsForQuestId(
    questId: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getAllPeriodsForQuestId",
      "getAllPeriodsForQuestId(uint256):(uint48[])",
      [ethereum.Value.fromUnsignedBigInt(questId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getAllQuestPeriodsForQuestId(
    questId: BigInt
  ): Array<QuestBoard__getAllQuestPeriodsForQuestIdResultValue0Struct> {
    let result = super.call(
      "getAllQuestPeriodsForQuestId",
      "getAllQuestPeriodsForQuestId(uint256):((uint256,uint256,uint256,uint256,uint256,uint48,uint8)[])",
      [ethereum.Value.fromUnsignedBigInt(questId)]
    );

    return result[0].toTupleArray<
      QuestBoard__getAllQuestPeriodsForQuestIdResultValue0Struct
    >();
  }

  try_getAllQuestPeriodsForQuestId(
    questId: BigInt
  ): ethereum.CallResult<
    Array<QuestBoard__getAllQuestPeriodsForQuestIdResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllQuestPeriodsForQuestId",
      "getAllQuestPeriodsForQuestId(uint256):((uint256,uint256,uint256,uint256,uint256,uint48,uint8)[])",
      [ethereum.Value.fromUnsignedBigInt(questId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        QuestBoard__getAllQuestPeriodsForQuestIdResultValue0Struct
      >()
    );
  }

  getCurrentPeriod(): BigInt {
    let result = super.call(
      "getCurrentPeriod",
      "getCurrentPeriod():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCurrentPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCurrentPeriod",
      "getCurrentPeriod():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getQuestIdsForPeriod(period: BigInt): Array<BigInt> {
    let result = super.call(
      "getQuestIdsForPeriod",
      "getQuestIdsForPeriod(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(period)]
    );

    return result[0].toBigIntArray();
  }

  try_getQuestIdsForPeriod(period: BigInt): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getQuestIdsForPeriod",
      "getQuestIdsForPeriod(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(period)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  isKilled(): boolean {
    let result = super.call("isKilled", "isKilled():(bool)", []);

    return result[0].toBoolean();
  }

  try_isKilled(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isKilled", "isKilled():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  kill_ts(): BigInt {
    let result = super.call("kill_ts", "kill_ts():(uint256)", []);

    return result[0].toBigInt();
  }

  try_kill_ts(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("kill_ts", "kill_ts():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minObjective(): BigInt {
    let result = super.call("minObjective", "minObjective():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minObjective(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minObjective", "minObjective():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minRewardPerVotePerToken(param0: Address): BigInt {
    let result = super.call(
      "minRewardPerVotePerToken",
      "minRewardPerVotePerToken(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_minRewardPerVotePerToken(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minRewardPerVotePerToken",
      "minRewardPerVotePerToken(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nextID(): BigInt {
    let result = super.call("nextID", "nextID():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nextID(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nextID", "nextID():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingOwner(): Address {
    let result = super.call("pendingOwner", "pendingOwner():(address)", []);

    return result[0].toAddress();
  }

  try_pendingOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("pendingOwner", "pendingOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  periodsByQuest(
    param0: BigInt,
    param1: BigInt
  ): QuestBoard__periodsByQuestResult {
    let result = super.call(
      "periodsByQuest",
      "periodsByQuest(uint256,uint256):(uint256,uint256,uint256,uint256,uint256,uint48,uint8)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new QuestBoard__periodsByQuestResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toI32()
    );
  }

  try_periodsByQuest(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<QuestBoard__periodsByQuestResult> {
    let result = super.tryCall(
      "periodsByQuest",
      "periodsByQuest(uint256,uint256):(uint256,uint256,uint256,uint256,uint256,uint48,uint8)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new QuestBoard__periodsByQuestResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toI32()
      )
    );
  }

  platformFee(): BigInt {
    let result = super.call("platformFee", "platformFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_platformFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("platformFee", "platformFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  questChest(): Address {
    let result = super.call("questChest", "questChest():(address)", []);

    return result[0].toAddress();
  }

  try_questChest(): ethereum.CallResult<Address> {
    let result = super.tryCall("questChest", "questChest():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  questDistributors(param0: BigInt): Address {
    let result = super.call(
      "questDistributors",
      "questDistributors(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_questDistributors(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "questDistributors",
      "questDistributors(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  questPeriods(param0: BigInt, param1: BigInt): BigInt {
    let result = super.call(
      "questPeriods",
      "questPeriods(uint256,uint256):(uint48)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_questPeriods(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "questPeriods",
      "questPeriods(uint256,uint256):(uint48)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  quests(param0: BigInt): QuestBoard__questsResult {
    let result = super.call(
      "quests",
      "quests(uint256):(address,address,address,uint48,uint48,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new QuestBoard__questsResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_quests(param0: BigInt): ethereum.CallResult<QuestBoard__questsResult> {
    let result = super.tryCall(
      "quests",
      "quests(uint256):(address,address,address,uint48,uint48,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new QuestBoard__questsResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  questsByPeriod(param0: BigInt, param1: BigInt): BigInt {
    let result = super.call(
      "questsByPeriod",
      "questsByPeriod(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_questsByPeriod(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "questsByPeriod",
      "questsByPeriod(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  recoverERC20(token: Address): boolean {
    let result = super.call("recoverERC20", "recoverERC20(address):(bool)", [
      ethereum.Value.fromAddress(token)
    ]);

    return result[0].toBoolean();
  }

  try_recoverERC20(token: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("recoverERC20", "recoverERC20(address):(bool)", [
      ethereum.Value.fromAddress(token)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  whitelistedTokens(param0: Address): boolean {
    let result = super.call(
      "whitelistedTokens",
      "whitelistedTokens(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_whitelistedTokens(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "whitelistedTokens",
      "whitelistedTokens(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _gaugeController(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _chest(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AddMerkleRootCall extends ethereum.Call {
  get inputs(): AddMerkleRootCall__Inputs {
    return new AddMerkleRootCall__Inputs(this);
  }

  get outputs(): AddMerkleRootCall__Outputs {
    return new AddMerkleRootCall__Outputs(this);
  }
}

export class AddMerkleRootCall__Inputs {
  _call: AddMerkleRootCall;

  constructor(call: AddMerkleRootCall) {
    this._call = call;
  }

  get questID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get period(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get totalAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get merkleRoot(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class AddMerkleRootCall__Outputs {
  _call: AddMerkleRootCall;

  constructor(call: AddMerkleRootCall) {
    this._call = call;
  }
}

export class AddMultipleMerkleRootCall extends ethereum.Call {
  get inputs(): AddMultipleMerkleRootCall__Inputs {
    return new AddMultipleMerkleRootCall__Inputs(this);
  }

  get outputs(): AddMultipleMerkleRootCall__Outputs {
    return new AddMultipleMerkleRootCall__Outputs(this);
  }
}

export class AddMultipleMerkleRootCall__Inputs {
  _call: AddMultipleMerkleRootCall;

  constructor(call: AddMultipleMerkleRootCall) {
    this._call = call;
  }

  get questIDs(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get period(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get totalAmounts(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get merkleRoots(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }
}

export class AddMultipleMerkleRootCall__Outputs {
  _call: AddMultipleMerkleRootCall;

  constructor(call: AddMultipleMerkleRootCall) {
    this._call = call;
  }
}

export class ApproveManagerCall extends ethereum.Call {
  get inputs(): ApproveManagerCall__Inputs {
    return new ApproveManagerCall__Inputs(this);
  }

  get outputs(): ApproveManagerCall__Outputs {
    return new ApproveManagerCall__Outputs(this);
  }
}

export class ApproveManagerCall__Inputs {
  _call: ApproveManagerCall;

  constructor(call: ApproveManagerCall) {
    this._call = call;
  }

  get newManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ApproveManagerCall__Outputs {
  _call: ApproveManagerCall;

  constructor(call: ApproveManagerCall) {
    this._call = call;
  }
}

export class ClosePartOfQuestPeriodCall extends ethereum.Call {
  get inputs(): ClosePartOfQuestPeriodCall__Inputs {
    return new ClosePartOfQuestPeriodCall__Inputs(this);
  }

  get outputs(): ClosePartOfQuestPeriodCall__Outputs {
    return new ClosePartOfQuestPeriodCall__Outputs(this);
  }
}

export class ClosePartOfQuestPeriodCall__Inputs {
  _call: ClosePartOfQuestPeriodCall;

  constructor(call: ClosePartOfQuestPeriodCall) {
    this._call = call;
  }

  get period(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get questIDs(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class ClosePartOfQuestPeriodCall__Outputs {
  _call: ClosePartOfQuestPeriodCall;

  constructor(call: ClosePartOfQuestPeriodCall) {
    this._call = call;
  }

  get closed(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get skipped(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class CloseQuestPeriodCall extends ethereum.Call {
  get inputs(): CloseQuestPeriodCall__Inputs {
    return new CloseQuestPeriodCall__Inputs(this);
  }

  get outputs(): CloseQuestPeriodCall__Outputs {
    return new CloseQuestPeriodCall__Outputs(this);
  }
}

export class CloseQuestPeriodCall__Inputs {
  _call: CloseQuestPeriodCall;

  constructor(call: CloseQuestPeriodCall) {
    this._call = call;
  }

  get period(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CloseQuestPeriodCall__Outputs {
  _call: CloseQuestPeriodCall;

  constructor(call: CloseQuestPeriodCall) {
    this._call = call;
  }

  get closed(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get skipped(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class CreateQuestCall extends ethereum.Call {
  get inputs(): CreateQuestCall__Inputs {
    return new CreateQuestCall__Inputs(this);
  }

  get outputs(): CreateQuestCall__Outputs {
    return new CreateQuestCall__Outputs(this);
  }
}

export class CreateQuestCall__Inputs {
  _call: CreateQuestCall;

  constructor(call: CreateQuestCall) {
    this._call = call;
  }

  get gauge(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get rewardToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get duration(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get objective(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get rewardPerVote(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get totalRewardAmount(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get feeAmount(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreateQuestCall__Outputs {
  _call: CreateQuestCall;

  constructor(call: CreateQuestCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class EmergencyWithdrawCall extends ethereum.Call {
  get inputs(): EmergencyWithdrawCall__Inputs {
    return new EmergencyWithdrawCall__Inputs(this);
  }

  get outputs(): EmergencyWithdrawCall__Outputs {
    return new EmergencyWithdrawCall__Outputs(this);
  }
}

export class EmergencyWithdrawCall__Inputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }

  get questID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class EmergencyWithdrawCall__Outputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }
}

export class IncreaseQuestDurationCall extends ethereum.Call {
  get inputs(): IncreaseQuestDurationCall__Inputs {
    return new IncreaseQuestDurationCall__Inputs(this);
  }

  get outputs(): IncreaseQuestDurationCall__Outputs {
    return new IncreaseQuestDurationCall__Outputs(this);
  }
}

export class IncreaseQuestDurationCall__Inputs {
  _call: IncreaseQuestDurationCall;

  constructor(call: IncreaseQuestDurationCall) {
    this._call = call;
  }

  get questID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get addedDuration(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get addedRewardAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get feeAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class IncreaseQuestDurationCall__Outputs {
  _call: IncreaseQuestDurationCall;

  constructor(call: IncreaseQuestDurationCall) {
    this._call = call;
  }
}

export class IncreaseQuestObjectiveCall extends ethereum.Call {
  get inputs(): IncreaseQuestObjectiveCall__Inputs {
    return new IncreaseQuestObjectiveCall__Inputs(this);
  }

  get outputs(): IncreaseQuestObjectiveCall__Outputs {
    return new IncreaseQuestObjectiveCall__Outputs(this);
  }
}

export class IncreaseQuestObjectiveCall__Inputs {
  _call: IncreaseQuestObjectiveCall;

  constructor(call: IncreaseQuestObjectiveCall) {
    this._call = call;
  }

  get questID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newObjective(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get addedRewardAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get feeAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class IncreaseQuestObjectiveCall__Outputs {
  _call: IncreaseQuestObjectiveCall;

  constructor(call: IncreaseQuestObjectiveCall) {
    this._call = call;
  }
}

export class IncreaseQuestRewardCall extends ethereum.Call {
  get inputs(): IncreaseQuestRewardCall__Inputs {
    return new IncreaseQuestRewardCall__Inputs(this);
  }

  get outputs(): IncreaseQuestRewardCall__Outputs {
    return new IncreaseQuestRewardCall__Outputs(this);
  }
}

export class IncreaseQuestRewardCall__Inputs {
  _call: IncreaseQuestRewardCall;

  constructor(call: IncreaseQuestRewardCall) {
    this._call = call;
  }

  get questID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newRewardPerVote(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get addedRewardAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get feeAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class IncreaseQuestRewardCall__Outputs {
  _call: IncreaseQuestRewardCall;

  constructor(call: IncreaseQuestRewardCall) {
    this._call = call;
  }
}

export class InitiateDistributorCall extends ethereum.Call {
  get inputs(): InitiateDistributorCall__Inputs {
    return new InitiateDistributorCall__Inputs(this);
  }

  get outputs(): InitiateDistributorCall__Outputs {
    return new InitiateDistributorCall__Outputs(this);
  }
}

export class InitiateDistributorCall__Inputs {
  _call: InitiateDistributorCall;

  constructor(call: InitiateDistributorCall) {
    this._call = call;
  }

  get newDistributor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitiateDistributorCall__Outputs {
  _call: InitiateDistributorCall;

  constructor(call: InitiateDistributorCall) {
    this._call = call;
  }
}

export class KillBoardCall extends ethereum.Call {
  get inputs(): KillBoardCall__Inputs {
    return new KillBoardCall__Inputs(this);
  }

  get outputs(): KillBoardCall__Outputs {
    return new KillBoardCall__Outputs(this);
  }
}

export class KillBoardCall__Inputs {
  _call: KillBoardCall;

  constructor(call: KillBoardCall) {
    this._call = call;
  }
}

export class KillBoardCall__Outputs {
  _call: KillBoardCall;

  constructor(call: KillBoardCall) {
    this._call = call;
  }
}

export class RecoverERC20Call extends ethereum.Call {
  get inputs(): RecoverERC20Call__Inputs {
    return new RecoverERC20Call__Inputs(this);
  }

  get outputs(): RecoverERC20Call__Outputs {
    return new RecoverERC20Call__Outputs(this);
  }
}

export class RecoverERC20Call__Inputs {
  _call: RecoverERC20Call;

  constructor(call: RecoverERC20Call) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RecoverERC20Call__Outputs {
  _call: RecoverERC20Call;

  constructor(call: RecoverERC20Call) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RemoveManagerCall extends ethereum.Call {
  get inputs(): RemoveManagerCall__Inputs {
    return new RemoveManagerCall__Inputs(this);
  }

  get outputs(): RemoveManagerCall__Outputs {
    return new RemoveManagerCall__Outputs(this);
  }
}

export class RemoveManagerCall__Inputs {
  _call: RemoveManagerCall;

  constructor(call: RemoveManagerCall) {
    this._call = call;
  }

  get manager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveManagerCall__Outputs {
  _call: RemoveManagerCall;

  constructor(call: RemoveManagerCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnkillBoardCall extends ethereum.Call {
  get inputs(): UnkillBoardCall__Inputs {
    return new UnkillBoardCall__Inputs(this);
  }

  get outputs(): UnkillBoardCall__Outputs {
    return new UnkillBoardCall__Outputs(this);
  }
}

export class UnkillBoardCall__Inputs {
  _call: UnkillBoardCall;

  constructor(call: UnkillBoardCall) {
    this._call = call;
  }
}

export class UnkillBoardCall__Outputs {
  _call: UnkillBoardCall;

  constructor(call: UnkillBoardCall) {
    this._call = call;
  }
}

export class UpdateChestCall extends ethereum.Call {
  get inputs(): UpdateChestCall__Inputs {
    return new UpdateChestCall__Inputs(this);
  }

  get outputs(): UpdateChestCall__Outputs {
    return new UpdateChestCall__Outputs(this);
  }
}

export class UpdateChestCall__Inputs {
  _call: UpdateChestCall;

  constructor(call: UpdateChestCall) {
    this._call = call;
  }

  get chest(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateChestCall__Outputs {
  _call: UpdateChestCall;

  constructor(call: UpdateChestCall) {
    this._call = call;
  }
}

export class UpdateDistributorCall extends ethereum.Call {
  get inputs(): UpdateDistributorCall__Inputs {
    return new UpdateDistributorCall__Inputs(this);
  }

  get outputs(): UpdateDistributorCall__Outputs {
    return new UpdateDistributorCall__Outputs(this);
  }
}

export class UpdateDistributorCall__Inputs {
  _call: UpdateDistributorCall;

  constructor(call: UpdateDistributorCall) {
    this._call = call;
  }

  get newDistributor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateDistributorCall__Outputs {
  _call: UpdateDistributorCall;

  constructor(call: UpdateDistributorCall) {
    this._call = call;
  }
}

export class UpdateMinObjectiveCall extends ethereum.Call {
  get inputs(): UpdateMinObjectiveCall__Inputs {
    return new UpdateMinObjectiveCall__Inputs(this);
  }

  get outputs(): UpdateMinObjectiveCall__Outputs {
    return new UpdateMinObjectiveCall__Outputs(this);
  }
}

export class UpdateMinObjectiveCall__Inputs {
  _call: UpdateMinObjectiveCall;

  constructor(call: UpdateMinObjectiveCall) {
    this._call = call;
  }

  get newMinObjective(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateMinObjectiveCall__Outputs {
  _call: UpdateMinObjectiveCall;

  constructor(call: UpdateMinObjectiveCall) {
    this._call = call;
  }
}

export class UpdatePlatformFeeCall extends ethereum.Call {
  get inputs(): UpdatePlatformFeeCall__Inputs {
    return new UpdatePlatformFeeCall__Inputs(this);
  }

  get outputs(): UpdatePlatformFeeCall__Outputs {
    return new UpdatePlatformFeeCall__Outputs(this);
  }
}

export class UpdatePlatformFeeCall__Inputs {
  _call: UpdatePlatformFeeCall;

  constructor(call: UpdatePlatformFeeCall) {
    this._call = call;
  }

  get newFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdatePlatformFeeCall__Outputs {
  _call: UpdatePlatformFeeCall;

  constructor(call: UpdatePlatformFeeCall) {
    this._call = call;
  }
}

export class UpdateRewardTokenCall extends ethereum.Call {
  get inputs(): UpdateRewardTokenCall__Inputs {
    return new UpdateRewardTokenCall__Inputs(this);
  }

  get outputs(): UpdateRewardTokenCall__Outputs {
    return new UpdateRewardTokenCall__Outputs(this);
  }
}

export class UpdateRewardTokenCall__Inputs {
  _call: UpdateRewardTokenCall;

  constructor(call: UpdateRewardTokenCall) {
    this._call = call;
  }

  get newToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newMinRewardPerVote(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateRewardTokenCall__Outputs {
  _call: UpdateRewardTokenCall;

  constructor(call: UpdateRewardTokenCall) {
    this._call = call;
  }
}

export class WhitelistMultipleTokensCall extends ethereum.Call {
  get inputs(): WhitelistMultipleTokensCall__Inputs {
    return new WhitelistMultipleTokensCall__Inputs(this);
  }

  get outputs(): WhitelistMultipleTokensCall__Outputs {
    return new WhitelistMultipleTokensCall__Outputs(this);
  }
}

export class WhitelistMultipleTokensCall__Inputs {
  _call: WhitelistMultipleTokensCall;

  constructor(call: WhitelistMultipleTokensCall) {
    this._call = call;
  }

  get newTokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get minRewardPerVotes(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class WhitelistMultipleTokensCall__Outputs {
  _call: WhitelistMultipleTokensCall;

  constructor(call: WhitelistMultipleTokensCall) {
    this._call = call;
  }
}

export class WhitelistTokenCall extends ethereum.Call {
  get inputs(): WhitelistTokenCall__Inputs {
    return new WhitelistTokenCall__Inputs(this);
  }

  get outputs(): WhitelistTokenCall__Outputs {
    return new WhitelistTokenCall__Outputs(this);
  }
}

export class WhitelistTokenCall__Inputs {
  _call: WhitelistTokenCall;

  constructor(call: WhitelistTokenCall) {
    this._call = call;
  }

  get newToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get minRewardPerVote(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WhitelistTokenCall__Outputs {
  _call: WhitelistTokenCall;

  constructor(call: WhitelistTokenCall) {
    this._call = call;
  }
}

export class WithdrawUnusedRewardsCall extends ethereum.Call {
  get inputs(): WithdrawUnusedRewardsCall__Inputs {
    return new WithdrawUnusedRewardsCall__Inputs(this);
  }

  get outputs(): WithdrawUnusedRewardsCall__Outputs {
    return new WithdrawUnusedRewardsCall__Outputs(this);
  }
}

export class WithdrawUnusedRewardsCall__Inputs {
  _call: WithdrawUnusedRewardsCall;

  constructor(call: WithdrawUnusedRewardsCall) {
    this._call = call;
  }

  get questID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawUnusedRewardsCall__Outputs {
  _call: WithdrawUnusedRewardsCall;

  constructor(call: WithdrawUnusedRewardsCall) {
    this._call = call;
  }
}
